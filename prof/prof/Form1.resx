<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>181, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAA
        ABsAAAAmAAAAGAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABkAAAAnAAAAGwAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AEMDAgKpEQ4M3BkWE+cQDgzYAwICnQAAADQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADQCAgKeEA4M2RkWE+cTEA7bBQQDpwAAAEEAAAADAAAAAAAA
        AAIAAABmEg8M7D00LP9WS0D/WE1C/1pOQ/9COjL/EQ8N4QAAAE8BAQEAAAAAAAAAABwAAABiAAAAaAAA
        AGkFBQtYTk66IAwMHEoAAABpAAAAaQAAAE4AAABWDQsJ4TwzK/9YTUL/WE1C/1pPRP9KQDf/GBQS6wAA
        AGYAAAACAAAASBEODOhHOzH/OTEp/hYTEOQNCwrNGRYT6kg+Nv9TSD7/Dg0L2gAAACgAAAAHAwMHoBsb
        T/8rK3L/MDB1/zs7jfllZfLfRUWk8zAwdP8vL3H/DAwe9AkIBe1FOjH/Qzoy/xgVEuoNCwnMFhMQ5D83
        MP5aTkP/FhMQ6AAAAEkCAQG2Ny4m/zMrI/8DAwKvAAAAKQAAAA0AAAA0BwYFwk1DOv87NC3/AAAAgAAA
        AGQZGUn4UE/i/2hn/v9sbP//bW3//2xs//9sbP//bGz//2pq/P8iIlP/KyMa/0A2Lf8HBwbEAAAAOAAA
        AB8AAAAwAwICr0E5Mf9GPTT/AgIBtwwKCPBFOjD/FBEO6QAAADEBAQFIBQUFlAICAocAAACzFhMQ/i0n
        If8CAQDcCAgZ4jw7rf9aWur/TU25/yoqZf8xMXX/WFfX/2ho//9sbP//bGz//zIzef8uJh3/HhkV9gAA
        AEkAAABHBgUEzAMCAoUAAAAoQTkxu2FVSf8ODAvwEA0L/EU6MP8NCwnYAAAAHAICAao1MS7/dWtm/4N5
        c/9/d3P/dnBt/1ZRT/8fHib/Hh07/xcWMv8ZFh3/PTQp/zUuJP8dHEj/RUTA/zo6j/8qKmP/FBU0/xkV
        Ev8TEA3rAAAANAUEA60sJB7/CwkI1AAAABhdUUaGZ1pN/xMRD/wJCAbmRDkv/xkVEfIAAABIAAAALwoJ
        CaI3MzDqiH12/9TEu//15Nz/8ePd/9nMx/98dXH/IRsV/1RGOv9yY1X/bV9R/xYUFf8ODS//IB5i/zY1
        nP82Np7/FRMk/xQRDfkAAACMExAN4zQrJP8EAwOjAAAASiciHutbT0T/DAsJ5gAAAJwtJh//PjQr/woJ
        CNQAAABaAAAAOgAAAJ8MCwr9My4r/3txa//Lu7L/9ubd/6CWkv8eGhX/Wks+/21eUf9FPDL/ExEy/zYw
        sP9OS+j/VFPz/1NS8P8jImD/HxoT/wsJB/clHxn9JB4Z/wAAALALCQjRUEU8/zszLP8AAACcAAAAKwkI
        BtA7MSn/ST40/ywmIfogHBjxMCok+ldMQf8vKSP/AQEB2ickIuJzamT/U01J/xcUEv8rJB7/PjQr/xAO
        Hv8yLKj/S0fn/1NS7v9TUu7/VFPx/0A/uf8WEx//FBAM/zUrJP8TFxj/Bxsm/RMVFf81Lij/DQsK0wAA
        ACwAAAAAAAAAPAgGBcsoIRz+Sj82/1VKP/9NQzr/KyYh+gcGBcAAAAA+AAAAOAAAAL06My7/nox//x0a
        Gf8sKSX/GRco/zYvt/9KReX/U1Lu/1NS7/9UU/L/SEfQ/xARLv8ICQf/Jx0W/xU+Uv8yotn/LnSV/wkV
        G/8AAACLAAAAAAAAAAAAAAAAAAAAHAAAAG8DAwKrCAcGuwMDA6MAAACbBAMCvQ0KCc0GBQTFFxUT5qaS
        hP/SvbD/NC8t/3NqZP90bWj/GRZY/0A50f9QTuz/UE7k/zs5qv8YHET/KmF6/zN2lf8PICf/CyUy/xRA
        Vv8PJC/2AwYIogAAACMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAJAAAAWQ4LCd0zKyP/PDMr/xYT
        Ef9cUUn/ybKi/2ZdV/8QMUH/JjA1/6GTi/9YUlL/GhdH/x0bYP8XHUj/GTZM/zmFpv9Vxvj/WMz//0yx
        3v8ydJL/FzVD/wMFBvQEAwK9AgIBcgAAAAsAAAAAAAAAAAAAAAAAAAAEAAAAFQAAAHcVEg/vOjAo/yId
        GP8ZFRH/GRUR/yMeGv8qJCD/FjxP/zGk3f8neJ//JzM5/2lfWv9zaWL/NTAr/w0fJv8qe6H/TcD0/1fN
        //9Yy///WMz//1nO//9Krdn/Dhsg/yMbFv8LCgjfAAAAJgAAAAAAAAAAAAAAGwICB5cICBfVBgYL+CUf
        Gv8aFhL/KSIc/0xANP9NQTX/KSIb/w0sPP8vntX/PLr4/1DG/P9IqNT/J1x0/y03O/9jWlX/cWdi/z0/
        QP8YO0z/LXyi/0q78P9Vyv//V8r+/1XG+f82fZ3/FSo0/wEBAbkAAAAMAAAAAAAAAA4CAgakJSVr/0pJ
        yP8oKGH/CggH/yskHf81LCT/IhwX/RURDu8HDA73J4Gt/zi5+v9Dvfj/V8r+/1jM//9Xyv3/R6jU/yle
        d/8pMDP/SUM//xIQD/8ODw7/F0hg/zyw6f9Rx/3/V8v+/1bH+/8mWXD/AAAAdAABAQAAAAAGAAAAgx8f
        WvxRUOH/OTmQ/w0NF/8bFxL/Eg8M7AMCAqoAAABjAAAAMgAAAHsQNUf3L5rQ/zy6+f9QyP7/WMz//1XF
        +P9Lr9z/MHGO/wkWHPQAAAD0FBEO/zgvJ/8EBQb+I3Sc/zip4f8pXXX/HDlG/wcRFeIAAAArAAAAAAAA
        AFsODinyPTyu/y4tef8GBg7FAQEApQMCAp8AAAA+AAAABgAAAAAAAAAAAAAACAAAAHUKIi7qG1p6/yVv
        k/8oYXv/Gz9P9wwcJNkCBASVAAAAsBoWEv1COTD/IBwY9QAAAMoXTmn9GUtj/1g3Hf8qGw76AAAAdwAA
        AAEAAAAAAAAAUAUFD8oKChzRAwMHmgAAACAAAAACAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        ADYAAAB7AAAAjgAAAHQAAABFAAAAGwAAAAIBAQGMGRUR/xIQDeMAAABsAAAAiQcdKf8+Lh//WToh/gYF
        BJcAAAALAAAAAAAAAAAAAAACAAAAEAAAABIAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsAAABfAAAAMQAAAAQAAACqDwoG/0Qq
        Fv8NCAWtAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEMHBALCCgYDtAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAA8AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////////////////////g//8HgD/8AQAwAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAAHwAAAA4AAAAMAAAACAAAABAAAAAQBgAAEB8AADD//wB///
        /w////+f//////////////////////////8=
</value>
  </data>
</root>